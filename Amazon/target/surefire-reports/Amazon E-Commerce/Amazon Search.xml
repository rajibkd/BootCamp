<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite hostname="Test" ignored="0" name="Amazon Search" tests="14" failures="0" timestamp="28 Jan 2017 19:28:02 GMT" time="2.215" errors="0">
  <testcase name="@BeforeMethod setUp" time="0.0" classname="Base.CommonAPI">
    <failure type="org.openqa.selenium.WebDriverException" message="Session not started or terminated (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 63 milliseconds
Build info: version: &amp;apos;3.0.1&amp;apos;, revision: &amp;apos;1969d75&amp;apos;, time: &amp;apos;2016-10-18 09:49:13 -0700&amp;apos;
System info: host: &amp;apos;Test&amp;apos;, ip: &amp;apos;192.168.138.1&amp;apos;, os.name: &amp;apos;Windows 10&amp;apos;, os.arch: &amp;apos;amd64&amp;apos;, os.version: &amp;apos;10.0&amp;apos;, java.version: &amp;apos;1.8.0_71&amp;apos;
Driver info: org.openqa.selenium.remote.RemoteWebDriver
Capabilities [{message=Error: OS and OS Version not supported., platform=ANY}]
Session ID: ">
      <![CDATA[org.openqa.selenium.WebDriverException: Session not started or terminated (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 63 milliseconds
Build info: version: '3.0.1', revision: '1969d75', time: '2016-10-18 09:49:13 -0700'
System info: host: 'Test', ip: '192.168.138.1', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_71'
Driver info: org.openqa.selenium.remote.RemoteWebDriver
Capabilities [{message=Error: OS and OS Version not supported., platform=ANY}]
Session ID: 
	at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:216)
	at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:168)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:635)
	at org.openqa.selenium.remote.RemoteWebDriver$RemoteWebDriverOptions$RemoteTimeouts.implicitlyWait(RemoteWebDriver.java:822)
	at Base.CommonAPI.setUp(CommonAPI.java:49)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
... Removed 22 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@AfterMethod tearDown" time="0.0" classname="Base.CommonAPI">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="Base.CommonAPI">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@AfterMethod tearDown" time="0.0" classname="Base.CommonAPI">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="Base.CommonAPI">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@AfterMethod tearDown" time="0.0" classname="Base.CommonAPI">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="Base.CommonAPI">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@AfterMethod tearDown" time="0.0" classname="Base.CommonAPI">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="Base.CommonAPI">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@AfterMethod tearDown" time="0.0" classname="Base.CommonAPI">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="Base.CommonAPI">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@AfterMethod tearDown" time="0.0" classname="Base.CommonAPI">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="Base.CommonAPI">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@AfterMethod tearDown" time="0.0" classname="Base.CommonAPI">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="Base.CommonAPI">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@AfterMethod tearDown" time="0.0" classname="Base.CommonAPI">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="Base.CommonAPI">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@AfterMethod tearDown" time="0.0" classname="Base.CommonAPI">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="Base.CommonAPI">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@AfterMethod tearDown" time="0.0" classname="Base.CommonAPI">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="Base.CommonAPI">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@AfterMethod tearDown" time="0.0" classname="Base.CommonAPI">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="Base.CommonAPI">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@AfterMethod tearDown" time="0.0" classname="Base.CommonAPI">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="Base.CommonAPI">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@AfterMethod tearDown" time="0.0" classname="Base.CommonAPI">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="Base.CommonAPI">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@AfterMethod tearDown" time="0.0" classname="Base.CommonAPI">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase name="testAmazonHomepage" time="0.002" classname="Page.TestAmazonHomepage">
    <skipped/>
  </testcase> <!-- testAmazonHomepage -->
  <testcase name="newAccount" time="0.0" classname="CreateAccount.CreateAnewAccount">
    <skipped/>
  </testcase> <!-- newAccount -->
  <testcase name="exploreHomepage" time="0.0" classname="Page.exploreHomePage">
    <skipped/>
  </testcase> <!-- exploreHomepage -->
  <testcase name="findAndAddToCart" time="0.0" classname="Shopping.FindAndAddToCart">
    <skipped/>
  </testcase> <!-- findAndAddToCart -->
  <testcase name="deleteFromCart" time="0.0" classname="Shopping.DeleteFromCart">
    <skipped/>
  </testcase> <!-- deleteFromCart -->
  <testcase name="LoginTest" time="0.0" classname="Page.LogIntoAmazon">
    <skipped/>
  </testcase> <!-- LoginTest -->
  <testcase name="logOutFromAmazon" time="0.0" classname="Page.LogOutFromAmazon">
    <skipped/>
  </testcase> <!-- logOutFromAmazon -->
  <testcase name="dropDownMenu" time="0.0" classname="SearchItems.DropDownMenuSearch">
    <skipped/>
  </testcase> <!-- dropDownMenu -->
  <testcase name="searchUsingDB" time="0.0" classname="SearchItems.SearchItemsByDatabase">
    <skipped/>
  </testcase> <!-- searchUsingDB -->
  <testcase name="searchUsingDataProvider" time="0.0" classname="SearchItems.SearchItemsByDataProvider">
    <skipped/>
  </testcase> <!-- searchUsingDataProvider -->
  <testcase name="searchUsingDataProvider" time="0.0" classname="SearchItems.SearchItemsByDataProvider">
    <skipped/>
  </testcase> <!-- searchUsingDataProvider -->
  <testcase name="searchUsingDataProvider" time="0.0" classname="SearchItems.SearchItemsByDataProvider">
    <skipped/>
  </testcase> <!-- searchUsingDataProvider -->
  <testcase name="search" time="0.0" classname="SearchItems.SearchItemsByExcel">
    <skipped/>
  </testcase> <!-- search -->
  <testcase name="searchUsingMongoDB" time="0.0" classname="SearchItems.SearchItemsByMongoDB">
    <skipped/>
  </testcase> <!-- searchUsingMongoDB -->
</testsuite> <!-- Amazon Search -->
